"use strict";function SpotifyPlayer(){var t=SpotifyPlayer.super_.apply(this,arguments);return this.label="Spotify",t}angular.module("cmagg",["ngAnimate","ngCookies","ngTouch","ngSanitize","firebase","ngResource","ngRoute","uuid4","ngClipboard"]).config(["$routeProvider","ngClipProvider",function(t,e){t.when("/",{templateUrl:"partials/main.html",controller:"MainController"}).when("/playlist/:id",{templateUrl:"partials/playlist.html",controller:"PlaylistController"}).when("/player/:id",{templateUrl:"partials/player.html",controller:"PlayerController"}).otherwise({redirectTo:"/"}),e.setPath("swf/ZeroClipboard.swf")}]),angular.module("cmagg").controller("MainController",["$scope","Playlist","$location","players",function(t,e,a,r){t.players=r,t.start=function(){(new e).$loaded().then(function(t){a.path("/playlist/"+t.$id)})}}]),angular.module("cmagg").controller("PlaylistController",["$scope","Playlist","Player","$routeParams","$window","$location",function(t,e,a,r,i,l){var n=new e(r.id);n.$bindTo(t,"playlist"),t.items=n.getItems(),t.player=new a(r.id),t.nameChangeable=!1,t.changeName=function(e){t.nameChangeable=e},t.add=function(e){t.items.add({url:e}).catch(function(){i.alert("URL is not valid! Currently only youtube, soundcloud and vimeo are supported!")}).finally(function(){t.url=void 0})},t.link=l.absUrl(),t.share=function(){i.alert("Link to the playlist has been copied to clipboard. Paste to share!")}}]),angular.module("cmagg").controller("PlayerController",["$scope","Playlist","PlayemPlayer","$routeParams",function(t,e,a,r){t.playlist=new e(r.id),t.items=t.playlist.getItems(),t.player=new a(r.id,t.items)}]);var app=angular.module("cmagg");app.value("firebaseRef",new Firebase("https://scorching-torch-3316.firebaseio.com")),app.factory("PlaylistItemFactory",["$FirebaseArray","metadataService",function(t,e){return t.$extendFactory({add:function(t){var a=this;return e.fetch(t.url).then(function(e){return t.title=e.title,t.img=e.img||null,t.type=e.label,a.$add(t)})}})}]),app.factory("PlaylistFactory",["$FirebaseObject","$firebase",function(t,e){return t.$extendFactory({getItems:function(){var t=this.$inst().$ref().child("items");return e(t,{arrayFactory:"PlaylistItemFactory"}).$asArray()}})}]),app.factory("Playlist",["$firebase","firebaseRef","uuid4",function(t,e,a){var r=e.child("playlists");return function(e){if(e)return t(r.child(e),{objectFactory:"PlaylistFactory"}).$asObject();e=a.generate();var i=t(r.child(e),{objectFactory:"PlaylistFactory"});return i.$set({name:"My awesome playlist",items:[],player:{}}),i.$asObject()}}]),app.factory("PlayerFactory",["$FirebaseObject",function(t){return t.$extendFactory({play:function(t){this.currentTrack&&t.$id===this.currentTrack.id&&!this.paused?this.paused=!0:(this.paused=!1,this.currentTrack=t,this.currentTrack.id=t.$id),this.setCurrent(t)},stop:function(){this.paused=!1,this.currentTrack=null,this.$save()},setCurrent:function(t){this.currentTrack=t,this.currentTrack.id=t.$id,this.$save()},isCurrent:function(t){return this.currentTrack&&this.currentTrack.id===t}})}]),app.factory("Player",["$firebase","firebaseRef",function(t,e){var a=e.child("playlists");return function(e){return t(a.child(e).child("player"),{objectFactory:"PlayerFactory"}).$asObject()}}]),SpotifyPlayer.prototype=AudioFilePlayer.prototype,SpotifyPlayer.super_=AudioFilePlayer,SpotifyPlayer.prototype.getEid=function(t){return/spotify.com\/track\/(\w+)/.test(t)?RegExp.$1:null},SpotifyPlayer.prototype.fetchMetadata=function(t,e){var a=this.getEid(t);loader.loadJSON("https://api.spotify.com/v1/tracks/"+a,function(t){e({title:t.name,img:t.album.images[0]})})},SpotifyPlayer.prototype.play=function(t){var e="http://localhost:1337/spotify/"+t;console.log(e),this.isReady&&this.embed({trackId:e})};var app=angular.module("cmagg");app.run(["$window",function(t){t.SOUNDCLOUD_CLIENT_ID="18045be62973fcaed72ba23eedeec3e8"}]),app.value("players",[YoutubePlayer,SoundCloudPlayer,VimeoPlayer,SpotifyPlayer]),app.factory("PlayemPlayer",["Player","$q","$window","players",function(t,e,a,r){var i={origin:a.location.host||a.location.hostname,playerContainer:a.document.getElementById("player")},l=new Playem;return r.forEach(function(t){l.addPlayer(t,i)}),function(a,r){var i=new t(a),n=function(t){return l.getQueue().findIndex(function(e){return e.metadata.id===t})},o=function(t){var e=n(t.id);-1!==e&&(l.stop(),l.play(e))},c=i.currentTrack?i.currentTrack.id:null,s="stopped";i.$watch(function(){i.paused&&c&&"paused"!==s?(console.log("pause"),l.pause(),s="paused"):i.currentTrack?i.paused||i.isCurrent(c)?"paused"!==s||i.paused||(console.log("resume"),l.resume(),s="playing"):(console.log("play"),c=i.currentTrack.id,o(i.currentTrack),s="playing"):(l.stop(),s="stopped")});var u=function(t){console.log("initlist");var a=e.defer();return t.$loaded().then(function(){l.clearQueue(),t.forEach(function(t){l.addTrackByUrl(t.url,{id:t.$id})}),a.resolve()}),a.promise};return u(r),r.$watch(function(){u(r).then(function(){if(i.currentTrack){var t=n(i.currentTrack.id);-1===t&&i.stop()}})}),l.on("onTrackChange",function(t){console.log("track changed"),r.$loaded().then(function(){var e=r.findIndex(function(e){return e.$id===t.metadata.id});c=t.metadata.id,i.setCurrent(r[e])})}),i}}]),app.factory("metadataService",["$window","players","$q",function(t,e,a){return{fetch:function(t){var r=a.defer(),i=e.some(function(e){return e.prototype.getEid(t)?(e.prototype.fetchMetadata(t,function(t){t?(t.label=e.name,r.resolve(t)):r.reject()}),!0):!1});return i||r.reject(),r.promise}}}]);var app=angular.module("cmagg");app.directive("cmaggPlaylist",[function(){return{templateUrl:"partials/directives/playlist.html",restrict:"E",scope:{player:"=",items:"="},link:function(t){var e=t.player;t.play=function(a){e.play(a||t.items[0])}}}}]),function(t){try{t=angular.module("cmagg")}catch(e){t=angular.module("cmagg",[])}t.run(["$templateCache",function(t){t.put("partials/main.html",'<div class="container"><div class="row"><div class="twelve columns main"><h2>Collective Playlist</h2><ul><li>Add music from different sources to a common playlist.</li><li>Share the list with your friends to collaborate.</li><li>Play it back while controlling it remotely.</li></ul><button class="button button-primary" ng-click="start()">Get started!</button><div class="supported"><img ng-repeat="player in players" ng-src="images/{{player.name}}.png"></div></div></div></div>')}])}(),function(t){try{t=angular.module("cmagg")}catch(e){t=angular.module("cmagg",[])}t.run(["$templateCache",function(t){t.put("partials/player.html",'<div class="container"><div class="row"></div><div class="row"><h2 ng-bind="playlist.name"></h2></div><cmagg-playlist items="items" player="player"></cmagg-playlist></div>')}])}(),function(t){try{t=angular.module("cmagg")}catch(e){t=angular.module("cmagg",[])}t.run(["$templateCache",function(t){t.put("partials/playlist.html",'<div class="container"><div class="row"></div><div class="row"><h2 class="playlist title" ng-hide="nameChangeable" ng-bind="playlist.name" ng-click="changeName(true)"></h2><input class="u-full-width" ng-blur="changeName(false)" ng-keyup="$event.keyCode == 13 && changeName(false)" ng-show="nameChangeable" type="text" ng-model="playlist.name"> <a class="button" href="#/player/{{playlist.$id}}" target="_blank">Open player</a> <button class="button" clip-copy="link" clip-click="share()">Share playlist</button></div><div class="row"><form ng-submit="add(url)"><div class="row"><div class="six columns"><input class="u-full-width" type="text" ng-model="url" placeholder="https://www.youtube.com/watch?v=3a4ecZHyoao"></div><div class="six columns"><input class="button-primary" type="submit" value="Add"></div></div></form><cmagg-playlist items="items" player="player"></cmagg-playlist></div></div>')}])}(),function(t){try{t=angular.module("cmagg")}catch(e){t=angular.module("cmagg",[])}t.run(["$templateCache",function(t){t.put("partials/directives/playlist.html",'<table class="u-full-width playlist" ng-if="items.length > 0"><thead><tr><th>#</th><th>Title</th><th>Type</th></tr></thead><tbody><tr ng-repeat="item in items" ng-click="play(item)" ng-class="{playing: player.isCurrent(item.$id)}" ng-mouseenter="active = $index" ng-mouseleave="active = -1"><td ng-if="active !== $index && !player.isCurrent(item.$id)">{{$index+1}}</td><td ng-if="active === $index && !player.isCurrent(item.$id)"><i class="icon ion-play"></i></td><td ng-if="player.isCurrent(item.$id) && !player.paused"><i class="icon ion-pause"></i></td><td ng-if="player.paused && player.isCurrent(item.$id)"><i class="icon ion-play"></i></td><td>{{item.title}}</td><td class="link"><a href="{{item.url}}" target="_blank"><img ng-src="/images/{{item.type}}.png" alt="{{item.type}}"></a></td></tr></tbody></table><p ng-if="items.length === 0">You have not added any tracks to the list yet</p>')}])}();